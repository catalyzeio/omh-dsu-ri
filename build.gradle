apply plugin: 'maven' // used for deploying artifacts to Maven repositories

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }

    ext {
        springBootVersion = "1.2.3.RELEASE"
    }

    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    group = 'org.openmhealth'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'spring-boot' // used for auto-configuration
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application' // enable the run target

    mainClassName = 'org.openmhealth.dsu.configuration.Application'

    ext {
        gradleVersion = '2.4'
        javaVersion = 1.8
        mailApiVersion = '1.5.2'
        postgresqlVersion = '9.3-1102-jdbc41'
    }

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    dependencies {
        compile 'org.hibernate:hibernate-validator'
        compile "com.fasterxml.jackson.core:jackson-core"
        compile "com.fasterxml.jackson.core:jackson-databind"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
        compile "com.sun.mail:mailapi:${mailApiVersion}"
        compile "javax.mail:javax.mail-api:${mailApiVersion}" // required to support InternetAddress fields
        compile 'org.slf4j:jcl-over-slf4j'
        compile 'org.slf4j:log4j-over-slf4j'
        compile 'ch.qos.logback:logback-classic'
        compile 'org.slf4j:slf4j-api'
        compile 'org.springframework:spring-beans'
        compile "org.springframework.boot:spring-boot-autoconfigure"
        compile 'org.springframework:spring-context'
        compile "org.springframework.security.oauth:spring-security-oauth2:2.0.7.RELEASE"
        compile 'javax.validation:validation-api'

        testCompile 'org.hamcrest:hamcrest-library'
        testCompile 'junit:junit'
        testCompile 'org.mockito:mockito-core'
        testCompile 'org.springframework:spring-test'
    }
}

configure([
        project(":authorization-server"),
        project(":resource-server")]) {

    dependencies {
        compile project(':shared')
        compile 'org.apache.httpcomponents:httpclient'
        compile "org.springframework.boot:spring-boot-starter-jetty"
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile 'org.springframework:spring-web'
        compile 'org.springframework:spring-webmvc'

        // you can comment out any dependencies you know you don't need after this point
        compile 'org.mongodb:mongo-java-driver'
        // compile 'mysql:mysql-connector-java'
        compile "org.postgresql:postgresql:${postgresqlVersion}"
    }
}

// FIXME add integration test support

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}
